{"version":3,"sources":["reportWebVitals.js","components/card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCYCQ,EAdF,SAACC,GAGV,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAAQC,IAAG,+BAA0BH,EAAMI,GAAhC,cACpB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCcXC,EAtBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHZK,SCElBC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKZ,UAAU,MAAf,SACI,uBAAOA,UAAW,mCACda,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCEbI,EARA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,oBAAqBC,OAAO,SAAvE,SACKrB,EAAMsB,YCiBJC,G,wDAnBX,WAAYvB,GAAO,IAAD,8BACd,cAAMA,IACDwB,MAAM,CACPC,UAAS,GAHC,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,wDAEJG,KAAK5B,MAAMsB,a,GAhBCQ,cCmDZC,E,kDA3CX,aAAc,IAAD,8BACb,gBAcAC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAd1C,EAAKZ,MAAQ,CACThB,OAAO,GACP0B,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACD5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAC1B9C,MAAK,SAAA+C,GAAK,OAAI,EAAKX,SAAS,CAACrB,OAAOgC,S,oBAO7C,WACQ,MAA8BZ,KAAKJ,MAA5BU,EAAP,EAAOA,YAAa1B,EAApB,EAAoBA,OACdiC,EAAiBjC,EAAOkC,QAAO,SAAAC,GACrC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAASX,EAAYU,kBAEzD,OAAQpC,EAAOsC,OAIP,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAUiC,WARxC,6C,GAzBUX,a,MCDlBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1B5D,M","file":"static/js/main.4f95d467.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\n\r\n\r\n\r\nconst Card = (props) => {\r\n    //const {name, email, id} = props;\r\n    // we can destructure by writing name, email and id instead of props at the top. we need to wrap it with {]\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>        \r\n            <img alt='robots'src={`https://robohash.org/${props.id}?200x200`} />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from '../components/card';\r\n\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email} \r\n                            \r\n                         />);\r\n            \r\n                     })\r\n            }\r\n        </div> \r\n        \r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className= 'pa3 ba b--green bg-lightest-blue'\r\n                type=\"search\"\r\n                placeholder=\"search robots\"\r\n                onChange = {searchChange}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '0.5px solid black', height:'800px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooops that is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\n//import { robots } from \"./robots\";\r\nimport Scroll from '../components/Scroll';\r\nimport '../containers/App.css';\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n    super();\r\n        this.state = {\r\n            robots:[],\r\n            searchfield:'',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots:users}));\r\n        \r\n    }\r\n\r\n    onSearchChange = (event)=>{\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n    render(){\r\n            const {searchfield, robots} = this.state;\r\n            const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n            })\r\n        return !robots.length ? \r\n        <h1>Loading</h1> :\r\n        \r\n            (\r\n                <div className=\"tc\">\r\n                    <h1 className='f1'>Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots = {filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        \r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport 'tachyons';\n//import {robots} from './robots'; // if  we have another props(property) like cats, we need to write {robots, cats}\n\nReactDOM.render(\n  <App />,  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}